{"version":3,"sources":["components/Form.jsx","components/ActionItem.jsx","components/Container.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","saveTodo","useState","value","setValue","onSubmit","event","preventDefault","className","onChange","target","placeholder","onKeyDown","key","ActionItem","todo","index","toggleTodoTask","deleteTodo","titleName","timeout","ms","Promise","res","setTimeout","isChecked","setIsChecked","useEffect","Checkbox","checked","color","tabIndex","onClick","a","title","text","IconButton","aria-label","Container","todos","TransitionGroup","List","map","CSSTransition","in","classNames","appear","unmountOnExit","ListItem","dense","App","setTodos","progTodos","setProgTodos","doneTodos","setDoneTodos","JSON","parse","localStorage","getItem","setItem","stringify","storageArr","sanitizedInput","trim","length","todoIndex","filter","_","Typography","component","variant","newTodos","newProgTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e51749e0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n/*\n * @params saveTodo function for saving a new todo\n * @returns The input field component\n */\nconst Form = ({ saveTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        saveTodo(value);\n        setValue(\"\");\n      }}\n    >\n      <div className=\"inline-flex w-1/4 rounded-lg pb-12 \">\n        <input\n          className={\n            \"bg-black bg-opacity-40 text-gray-300 rounded-lg focus:ring-2 focus:ring-gray-600 focus:outline-none h-8 w-full px-2\"\n          }\n          onChange={(event) => {\n            setValue(event.target.value);\n          }}\n          placeholder=\" + Add action item here...\"\n          onKeyDown={(event) => {\n            //Set the value of input to be null on submission\n            if (event.key === \"Enter\") {\n              event.target.value = \"\";\n            }\n          }}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Checkbox,\n  IconButton\n} from \"@material-ui/core\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n/*\n * @params todo details, function to map to new state, title-state to which todo belongs\n * @returns The component to show todo in Container\n */\nconst ActionItem = ({ todo, index, toggleTodoTask, deleteTodo, titleName }) => {\n\n  const timeout = (ms) => {\n    return new Promise(res => setTimeout(res,ms));\n  }\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  //Animation hook - provides delay for animation to complete\n  useEffect(() => {\n    if(isChecked) {\n      setTimeout(() => {\n        setIsChecked(false);\n      }, 500)\n    }\n  }, [isChecked])\n  return (\n      <div className={`w-full flex flex-row border-b-2 border-opacity-40 justify-around ${titleName === \"Todo\" ? \"border-red-400\" : titleName === \"Done\" ? \"border-yellow-600\" : \"border-green-400\"}`}>\n        {(titleName === \"Todo\" || titleName === \"In Progress\") && <div className=\"self-center text-gray-300\">\n          <Checkbox\n            checked={isChecked}\n            color=\"primary\"\n            tabIndex={-1}\n            onClick={async () => { setIsChecked(true); await timeout(500); toggleTodoTask(index);}}\n          />\n        </div>}\n        <div className={`w-10/12 px-2 truncate overflow-ellipsis self-center ${isChecked ? \"line-through\": \"\"}`} title={todo.text}>\n          {todo.text}\n        </div>\n\n        <IconButton\n          aria-label=\"Delete\"\n          onClick={async () => {\n            await timeout(500);\n            deleteTodo(index);\n          }}\n          color=\"secondary\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      </div>\n  );\n};\n\nexport default ActionItem;\n","import React from \"react\";\nimport { List, ListItem } from \"@material-ui/core\";\nimport ActionItem from \"./ActionItem\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './styles.css';\n\n/*\n * @params todo details, function to map to new state, title-state to which todo belongs\n * @returns The Container component - lists all todos state-wise\n */\nconst Container = ({ todos, toggleTodoTask, deleteTodo, titleName }) => {\n    return (\n        <div className={`border-l-4 border-opacity-70 ${titleName === \"Todo\" ? \"border-red-400\" : titleName === \"Done\" ? \"border-yellow-400\" : \"border-green-400\"}`}>\n            <div className={`w-1/4 sm:w-2/5 bg-black bg-opacity-40 capitalize border-2 border-black border-opacity-30 text-gray-300 text-lg py-2`}>\n                {titleName}\n            </div>\n            <div className={`items-section bg-black bg-opacity-40 text-gray-300 h-96 overflow-y-auto py-4`}>\n                <TransitionGroup className=\"items-section___list\">\n                    <List className=\"w-full\">\n                        {todos && todos.map((todo, index) => (\n                            <CSSTransition\n                                in={true}\n                                timeout={1000}\n                                classNames=\"move\"\n                                key={`item-${index}`}\n                                appear={true}\n                                unmountOnExit={true}\n                            >\n                                <ListItem key={index} dense className=\"w-full\">\n                                    <ActionItem todo={todo} index={index} toggleTodoTask={toggleTodoTask} deleteTodo={deleteTodo} titleName={titleName} />\n                                </ListItem>\n                            </CSSTransition>\n\n                        ))}\n                    </List>\n                </TransitionGroup>\n            </div>\n        </div>\n    )\n};\n\nexport default Container;","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\n\nimport { Typography } from \"@material-ui/core\";\n\nimport Form from \"./components/Form\";\nimport Container from \"./components/Container\";\n\nfunction App() {\n\n  //States for maintaing the lists\n  const [todos, setTodos] = useState([]);\n  const [progTodos, setProgTodos] = useState([]);\n  const [doneTodos, setDoneTodos] = useState([]);\n\n  //Fetching local storage to retrieve saved todos from previous session\n  useEffect(() => {\n    setTodos(JSON.parse(localStorage.getItem(\"todoList\")) ?? []);\n    setProgTodos(JSON.parse(localStorage.getItem(\"progList\")) ?? []);\n    setDoneTodos(JSON.parse(localStorage.getItem(\"doneList\")) ?? []);\n  }, []);\n\n  //Storing in local storage to persist state\n  useEffect(() => {\n    localStorage.setItem(\"todoList\", JSON.stringify(todos));\n    localStorage.setItem(\"progList\", JSON.stringify(progTodos));\n    localStorage.setItem(\"doneList\", JSON.stringify(doneTodos));\n  }, [todos, progTodos, doneTodos]);\n\n  //Core actions - save and delete\n  const saveTodo = (storageArr, value) => {\n    const sanitizedInput = value.trim();\n    if (sanitizedInput.length > 0) {\n      return [...storageArr, { text: sanitizedInput }];\n    }\n    return storageArr;\n  }\n\n  const deleteTodo = (storageArr, todoIndex) => {\n    return storageArr.filter((_, index) => index !== todoIndex);\n  }\n\n  //Secondary functions for todo state changes\n  const moveToInProgress = (todoIndex) => {\n    setProgTodos(saveTodo(progTodos, todos[todoIndex].text));\n    const newTodos = todos.filter((_, index) => index !== todoIndex);\n    setTodos(newTodos);\n  };\n\n  const moveToDone = (todoIndex) => {\n    setDoneTodos(saveTodo(doneTodos, progTodos[todoIndex].text));\n    const newProgTodos = progTodos.filter((_, index) => index !== todoIndex);\n    setProgTodos(newProgTodos);\n  };\n\n  //Main Page component\n  return (\n    <div className=\"App bg-black flex flex-col h-screen w-screen bg-opacity-80 overflow-auto\">\n\n      <div className=\"text-white opacity-80 my-4\">\n        <Typography component=\"h1\" variant=\"h2\">\n          T O D O S\n        </Typography>\n      </div>\n\n      <div className={\"bg-black bg-opacity-40 py-8 rounded-sm\"}>\n        <Form\n          saveTodo={(value) => {\n            setTodos(saveTodo(todos, value));\n          }}\n        />\n\n        <div className=\"flex flex-row justify-evenly w-full h-full\">\n          \n          <div className=\"px-4 w-1/3\">\n              <Container\n                todos={todos}\n                deleteTodo={(todoIndex) => {\n                  setTodos(deleteTodo(todos, todoIndex));\n                }}\n                toggleTodoTask={moveToInProgress}\n                titleName={\"Todo\"}\n              />\n          </div>\n          <div className=\"pr-4 w-1/3\">\n              <Container\n                todos={progTodos}\n                deleteTodo={(todoIndex) => {\n                  setProgTodos(deleteTodo(progTodos, todoIndex));\n                }}\n                toggleTodoTask={moveToDone}\n                titleName={\"In Progress\"}\n              />\n          </div>\n          <div className=\"pr-4 w-1/3\">\n              <Container\n                todos={doneTodos}\n                deleteTodo={(todoIndex) => {\n                  setDoneTodos(deleteTodo(doneTodos, todoIndex));\n                }}\n                toggleTodoTask={(todoIndex) => { }}\n                titleName={\"Done\"}\n              />\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}